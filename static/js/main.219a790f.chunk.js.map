{"version":3,"sources":["components/layouts/Header.jsx","context.js","components/contacts/Contact.jsx","components/contacts/Contacts.jsx","components/contacts/AddContact.jsx","components/contacts/EditContact.jsx","components/pages/About.jsx","components/pages/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","href","branding","react_router_dom","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContatcInfo","onShowClick","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","classes","onClick","style","float","color","bind","Contacts","Fragment","contacts_Contact","AddContact","onChange","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","post","history","push","_this$state2","htmlFor","placeholder","required","updateContact","match","params","put","About","NotFound","App","context_Provider","layouts_Header","react_router","exact","path","component","EditContact","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.219a790f.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nconst Header = props => {\n  return (\n    <nav className=\"navbar-expand-sm navbar navbar-dark bg-danger mb-5 py-0\">\n      <a href='/' className=\"navbar-brand\">{props.branding}</a>\n      <div>\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n          <Link to=\"\" className=\"nav-link\">\n          <i className=\"fas fa-home\"></i> Home\n          </Link>\n          </li>\n\n          <li className=\"nav-item\">\n          <Link to=\"/contact/add\" className=\"nav-link\">\n          <i className=\"fas fa-plus\"></i> Add\n          </Link>\n          </li>\n\n          <li className=\"nav-item\">\n          <Link to=\"/about\" className=\"nav-link\">\n          <i className=\"fas fa-question\"></i> About\n          </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  )\n}\n\nHeader.defaultProps = {\n  branding: 'Contact Manager'\n}\n\nexport default Header\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    \n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      } \n\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(\n          contact => contact.id === action.payload.id \n          ? (contact = action.payload)\n          : contact\n        )\n      } \n\n    default:\n      return state;\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n\n    this.setState({contacts: res.data});\n  }\n  render() {\n    return(\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\nclass Contact extends Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {}\n  //   this.onShowClick = this.onShowClick.bind(this)\n  // }\n  state = {\n    showContatcInfo: false\n  };\n\n  onShowClick = () => {\n    this.setState({ showContatcInfo: !this.state.showContatcInfo });\n  }\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    dispatch({ type: 'DELETE_CONTACT', payload: id })\n  }\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const classes = this.state.showContatcInfo ? \"fas fa-chevron-up\" : \"fas fa-chevron-down\";\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return(\n            <div className=\"card card-body mb-3\">\n              <h4>\n              { name } \n              <i className={classes} onClick={this.onShowClick}></i>\n              <i className=\"fas fa-times\" style={{float: 'right', color: 'red'}} onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\n              <Link to={`/contact/edit/${id}`}><i className=\"fas fa-edit\" style={{float: 'right', color: 'black'}}></i></Link>\n              </h4>\n              {this.state.showContatcInfo ? \n              <ul className=\"list-group\">\n                <li className=\"list-group-item\">Email: { email }</li>\n                <li className=\"list-group-item\">Phone: { phone }</li>\n              </ul> : null }\n            </div>\n          )\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from '../contacts/Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  // deleteContact(id) {\n  //   const newContacts = this.state.contacts.filter((contact) =>\n  //   contact.id !== id);\n  //   this.setState({contacts: newContacts})\n  // }\n  render() {\n    return(\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-3\">\n              <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map( contact => <Contact \n              key={contact.id} \n              contact={contact} \n              /*onDeleteHandeler={this.deleteContact.bind(this, contact.id)}*/\n              /> )}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n\n  }\n}\n\nexport default Contacts;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name:  '',\n    email: '',\n    phone: ''\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value })\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const {name, email, phone} = this.state;\n    const newContact = {name, email, phone};\n\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n    \n    this.setState({\n      name: '',\n      email: '',\n      phone: ''\n    })\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { name, email, phone } = this.state;\n    return(\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n      \n                  <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input \n                      type=\"text\" \n                      id=\"name\"\n                      name=\"name\"\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Enter Name..\"\n                      value={name}\n                      onChange={this.onChange}\n                      required\n                    />\n                  </div>\n      \n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input \n                      type=\"email\" \n                      id=\"email\"\n                      name=\"email\"\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Enter Email..\"\n                      value={email}\n                      onChange={this.onChange}\n                      required\n                    />\n                  </div>\n      \n                  <div className=\"form-group\">\n                    <label htmlFor=\"phone\">Phone</label>\n                    <input \n                      type=\"text\" \n                      id=\"phone\"\n                      name=\"phone\"\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Enter Phone..\"\n                      value={phone}\n                      onChange={this.onChange}\n                      required\n                    />\n                  </div>\n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-block btn-success btn-lg\" />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name:  '',\n    email: '',\n    phone: ''\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value })\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { id } = this.props.match.params;\n    const {name, email, phone} = this.state;\n    const updateContact = {name, email, phone};\n\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n    \n    this.setState({\n      name: '',\n      email: '',\n      phone: ''\n    })\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { name, email, phone } = this.state;\n    return(\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n      \n                  <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input \n                      type=\"text\" \n                      id=\"name\"\n                      name=\"name\"\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Enter Name..\"\n                      value={name}\n                      onChange={this.onChange}\n                      required\n                    />\n                  </div>\n      \n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input \n                      type=\"email\" \n                      id=\"email\"\n                      name=\"email\"\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Enter Email..\"\n                      value={email}\n                      onChange={this.onChange}\n                      required\n                    />\n                  </div>\n      \n                  <div className=\"form-group\">\n                    <label htmlFor=\"phone\">Phone</label>\n                    <input \n                      type=\"text\" \n                      id=\"phone\"\n                      name=\"phone\"\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Enter Phone..\"\n                      value={phone}\n                      onChange={this.onChange}\n                      required\n                    />\n                  </div>\n                  <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-block btn-success btn-lg\" />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React from 'react'\n\nexport default function About() {\n  return (\n    <div>\n      <h4 className=\"display-4\">About Contact Manager</h4>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">version: 1.0.0</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nfunction NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  )\n}\n\nexport default NotFound\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/layouts/Header';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport { Provider } from './context';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}